use sakila;
-- 1. List the number of films per category.
select category_id, count(*) film_id from film_category
group by category_id;

select name, count(*) category_id from category
group by name;

select
	c.name as "Film Category",
    count(fc.film_id) as "Number of Films"
FROM film_category as fc
JOIN category as c
ON fc.category_id = c.category_id
group by c.name;

-- 2. Retrieve the store ID, city, and country for each store.

SELECT
	s.store_id as "Store ID",
    cou.country as "Country", 
    c.city as "City"
from store as s
join address as a on s.address_id = a.address_id
join city as c on a.city_id = c.city_id
join country as cou on c.country_id = cou.country_id;
  
-- 3. Calculate the total revenue generated by each store in dollars
select 
	s.store_id as "Store ID",
	SUM(p.amount) as "Revenue"
from store as s 
join customer as c on s.store_id = c.store_id
join payment as p on c.customer_id = p.customer_id
group by s.store_id;


-- 4. Determine the average running time of films for each category
select
	c.name as "Category Name", 
    floor(avg(f.length)) as "Average Length in Minutes"
from category as c
join film_category as fc on c.category_id = fc.category_id
join film as f on fc.film_id = f.film_id
group by c.name;

-- bonus: 
-- 1. Identify the film categories with the longest average running time.
select
	c.name as "Category Name", 
    floor(avg(f.length)) as Average_Length
from category as c
join film_category as fc on c.category_id = fc.category_id
join film as f on fc.film_id = f.film_id
group by c.name
order by Average_Length desc
limit 5;


-- 2. Display the top 10 most frequently rented movies in descending order.
select 
	f.title,
    count(r.rental_date) as Rate_Rented
from rental as r
join inventory as i on r.inventory_id = i.inventory_id
join film as f on i.film_id = f.film_id
group by f.title
order by Rate_Rented desc
limit 10




-- EError Code: 1054. Unknown column 'i.rental_id' in 'on clause'




